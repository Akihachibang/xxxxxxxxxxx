--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v88=0;local v89;while true do if (v88==0) then v89=v5(v82,v19);v19=nil;v88=1;end if (v88==1) then return v89;end end else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -(120 -(32 + 85)))^(v32-(1 + 0))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + ((608 + 12) -(555 + 64)))) ;return v83-(v83%(932 -(857 + 74))) ;else local v84=(2 -0)^(v32-(569 -(367 + 201))) ;return (((v31%(v84 + v84))>=v84) and ((282 + 989) -(226 + 1044))) or (0 -0) ;end end local function v21() local v34=957 -(892 + 65) ;local v35;while true do if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=1 -(350 -(87 + 263)) ;end if (v34==(1 -0)) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (182 -(67 + 113)) );v18=v18 + 2 + 0 ;return (v37 * 256) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -(10 -6)) );v18=v18 + (6 -2) ;return (v41 * (8981306 + 3357534 + 4438376)) + (v40 * (260471 -194935)) + (v39 * (1208 -(802 + 150))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=431 -(44 + 386) ;local v45=(v20(v43,998 -(915 + 82) ,56 -36 ) * ((2 + (1486 -(998 + 488)))^32)) + v42 ;local v46=v20(v43,27 -6 ,1218 -(1069 + 118) );local v47=((v20(v43,72 -40 )==1) and  -(1 -(0 + 0))) or (1 + 0 + 0) ;if (v46==0) then if (v45==(0 -0)) then return v47 * (0 + (772 -(201 + 571))) ;else local v90=791 -((1506 -(116 + 1022)) + 423) ;while true do if ((0 -0)==v90) then v46=19 -(10 + 8) ;v44=(0 -0) -0 ;break;end end end elseif (v46==(2489 -(245 + 171 + 26))) then return ((v45==(0 -0)) and (v47 * (1/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-(1809 -786) ) * (v44 + (v45/(2^((1788 -1298) -(145 + 293))))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;local v50={};for v65=860 -(814 + 45) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 811 -(569 + 242) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 561 -(79 + 482) ;end)();while true do if ((1 -0)~=v67) then else if (v51~=(0 -0)) then else local v95=(function() return 0;end)();while true do if (v95==(1024 -(706 + 318))) then v52=(function() return function(v110,v111,v112) local v113=(function() return 0;end)();local v114=(function() return;end)();while true do if ((285 -(134 + 151))==v113) then v114=(function() return 1665 -(970 + 695) ;end)();while true do if (v114==(0 -0)) then local v686=(function() return 0 + 0 ;end)();while true do if (v686==(1990 -(582 + 1408))) then local v944=(function() return 0;end)();while true do if (v944~=(0 -0)) then else v110[v111-#"!" ]=(function() return v112();end)();return v110,v111,v112;end end end end end end break;end end end;end)();v53=(function() return {};end)();v95=(function() return 1;end)();end if (v95==(1 -0)) then v54=(function() return {};end)();v55=(function() return {};end)();v95=(function() return 2;end)();end if (v95==2) then v51=(function() return 3 -2 ;end)();break;end end end break;end if (v67~=(1824 -(1195 + 629))) then else if ((1088 -(461 + 625))~=v51) then else v56[ #"asd"]=(function() return v21();end)();for v98= #">",v23() do local v99=(function() return v21();end)();if (v20(v99, #"|", #"~")==(0 -0)) then local v101=(function() return 241 -(187 + 54) ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if (v101~=(1 + 1)) then else if (v20(v103, #"]", #",")== #">") then v104[1173 -(418 + 753) ]=(function() return v58[v104[2]];end)();end if (v20(v103,782 -(162 + 618) ,1 + 1 )== #"/") then v104[ #"19("]=(function() return v58[v104[ #"xxx"]];end)();end v101=(function() return 3 + 0 ;end)();end if (v101==(1 + 0)) then v104=(function() return {v22(),v22(),nil,nil};end)();if (v102==0) then local v119=(function() return 0 + 0 ;end)();local v120=(function() return;end)();while true do if (v119==0) then v120=(function() return 0 -0 ;end)();while true do if (v120==(0 -0)) then v104[ #"xnx"]=(function() return v22();end)();v104[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v102== #"}") then v104[ #"19("]=(function() return v23();end)();elseif (v102==(1 + 1)) then v104[ #"-19"]=(function() return v23() -(2^(1652 -(1373 + 263))) ;end)();elseif (v102== #"xxx") then local v947=(function() return 1000 -(451 + 549) ;end)();local v948=(function() return;end)();while true do if ((1322 -(1249 + 73))==v947) then v948=(function() return 0;end)();while true do if (v948==(0 + 0)) then v104[ #"xnx"]=(function() return v23() -((1 + 1)^(24 -8)) ;end)();v104[ #"0836"]=(function() return v22();end)();break;end end break;end end end v101=(function() return 2;end)();end if (v101==(0 -0)) then v102=(function() return v20(v99,4 -2 , #"91(");end)();v103=(function() return v20(v99, #"?id=",1390 -(746 + 638) );end)();v101=(function() return 1 + 0 ;end)();end if (v101~=(1903 -(106 + 1794))) then else if (v20(v103, #"gha", #"-19")~= #"|") then else v104[ #".com"]=(function() return v58[v104[ #"?id="]];end)();end v53[v98]=(function() return v104;end)();break;end end end end for v100= #"|",v23() do v54,v100,v28=(function() return v52(v54,v100,v28);end)();end return v56;end if (v51~=1) then else local v97=(function() return 0;end)();while true do if (v97==(1 + 0)) then v58=(function() return {};end)();for v105= #"~",v57 do local v106=(function() return 0 -0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106~=1) then else v109=(function() return nil;end)();while true do if (v107==(341 -(218 + 123))) then local v643=(function() return 0 -0 ;end)();local v644=(function() return;end)();while true do if (v643~=(0 -0)) then else v644=(function() return 114 -(4 + 110) ;end)();while true do if (v644==(585 -(57 + 527))) then v107=(function() return 1582 -(1535 + 46) ;end)();break;end if (v644==0) then v108=(function() return v21();end)();v109=(function() return nil;end)();v644=(function() return 1 + 0 ;end)();end end break;end end end if ((1 + 0)~=v107) then else if (v108== #".") then v109=(function() return v21()~=(560 -(306 + 254)) ;end)();elseif (v108==(1 + 1)) then v109=(function() return v24();end)();elseif (v108== #"asd") then v109=(function() return v25();end)();end v58[v105]=(function() return v109;end)();break;end end break;end if (v106~=(0 -0)) then else local v116=(function() return 0;end)();while true do if (v116==(1467 -(899 + 568))) then v107=(function() return 0 + 0 ;end)();v108=(function() return nil;end)();v116=(function() return 2 -1 ;end)();end if (v116~=(604 -(268 + 335))) then else v106=(function() return 1;end)();break;end end end end end v97=(function() return 292 -(60 + 230) ;end)();end if (v97==2) then v51=(function() return 574 -(426 + 146) ;end)();break;end if (v97==(0 + 0)) then v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v97=(function() return 1 -0 ;end)();end end end v67=(function() return 1;end)();end end end end local function v29(v59,v60,v61) local v62=v59[2 -1 ];local v63=v59[168 -(122 + 44) ];local v64=v59[5 -2 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=3 -2 ;local v73= -(1 + (801 -(499 + 302)));local v74={};local v75={...};local v76=v12("#",...) -(1 -0) ;local v77={};local v78={};for v85=0,v76 do if (v85>=v70) then v74[v85-v70 ]=v75[v85 + (66 -(30 + 35)) ];else v78[v85]=v75[v85 + 1 + 0 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1258 -(1043 + 214) ];if ((v81<=(120 -88)) or (4477<3601)) then if (v81<=(1227 -(323 + (2453 -1564)))) then if ((v81<=(18 -11)) or (3478==589)) then if (v81<=(583 -(361 + 219))) then if (v81<=(321 -(53 + 267))) then if ((1732>=130) and (v81==(0 + 0))) then if ( not v78[v80[2]] or (867>3215)) then v72=v72 + (414 -(15 + 398)) ;else v72=v80[985 -(18 + 964) ];end else local v122=0 -0 ;local v123;local v124;while true do if (v122==(0 + 0)) then v123=v80[2 + 0 ];v124={};v122=(1900 -1049) -(20 + 830) ;end if ((665<=4541) and (v122==(1 + 0))) then for v871=127 -(116 + 10) , #v77 do local v872=v77[v871];for v899=0 + 0 , #v872 do local v900=v872[v899];local v901=v900[1];local v902=v900[740 -(542 + 196) ];if ((v901==v78) and (v902>=v123)) then v124[v902]=v901[v902];v900[1]=v124;end end end break;end end end elseif (v81==(3 -1)) then v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]]%v78[v80[2 + 2 ]] ;else v78[v80[4 -2 ]]=v78[v80[3]]%v80[9 -5 ] ;end elseif ((1089<=3455) and (v81<=(1556 -(1126 + (1688 -1263))))) then if ((v81==(409 -(118 + 287))) or (3522<2146)) then local v127=0 -0 ;local v128;while true do if ((1121 -(118 + 1003))==v127) then v128=v80[5 -3 ];do return v13(v78,v128,v73);end break;end end else local v129=377 -(142 + 235) ;local v130;local v131;local v132;local v133;while true do if ((0 -0)==v129) then v130=v80[1 + 1 ];v131,v132=v71(v78[v130](v13(v78,v130 + (978 -(553 + (650 -226))) ,v73)));v129=1 -0 ;end if ((v129==(1 + 0)) or (3491<=3258)) then v73=(v132 + v130) -(1 + (0 -0)) ;v133=0;v129=2 + 0 ;end if (v129==(2 + 0)) then for v873=v130,v73 do v133=v133 + 1 + 0 ;v78[v873]=v131[v133];end break;end end end elseif (v81>(4 + 2)) then local v134=0 -0 ;while true do if (v134==(11 -7)) then v78[v80[4 -2 ]]=v78[v80[1 + 2 ]][v80[(4 + 15) -15 ]];break;end if ((v134==(755 -(239 + 514))) or (4449<3644)) then v78[v80[1 + 1 ]]=v61[v80[1332 -(797 + 532) ]];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v134=2 + 1 ;end if (v134==(6 -3)) then v78[v80[2]]=v78[v80[1205 -(373 + 829) ]][v80[735 -((580 -(103 + 1)) + 255) ]];v72=v72 + (1131 -((923 -(475 + 79)) + 761)) ;v80=v68[v72];v134=3 + 1 ;end if (v134==(0 -0)) then v78[v80[3 -1 ]]=v80[241 -(64 + 174) ];v72=v72 + 1 ;v80=v68[v72];v134=1 + 0 ;end if (v134==(1 -0)) then v78[v80[338 -(144 + 192) ]]=v80[219 -(42 + 174) ];v72=v72 + 1 + 0 ;v80=v68[v72];v134=2;end end else v78[v80[2 + 0 ]]=v78[v80[2 + (2 -1) ]][v80[4]];end elseif ((v81<=11) or (153>=1887)) then if (v81<=(1513 -(363 + 1141))) then if ((1765>640) and (v81==(1588 -(1183 + 397)))) then if (v80[5 -3 ]==v78[v80[3 + 1 ]]) then v72=v72 + 1 + 0 ;else v72=v80[1978 -(1913 + 62) ];end else v78[v80[2 + 0 ]]=v60[v80[7 -4 ]];end elseif (v81>(1943 -(565 + 1368))) then local v139=0 -0 ;local v140;local v141;local v142;while true do if (v139==(3 -2)) then v142=v78[v140 + (1663 -(1477 + 184)) ];if ((200<4059) and (v142>0)) then if (v141>v78[v140 + (1 -0) ]) then v72=v80[3 + 0 ];else v78[v140 + (859 -(564 + 292)) ]=v141;end elseif ((v141<v78[v140 + 1 ]) or (3210<=1400)) then v72=v80[4 -1 ];else v78[v140 + (8 -5) ]=v141;end break;end if (v139==(304 -(244 + 60))) then v140=v80[1 + 1 ];v141=v78[v140];v139=1 + 0 ;end end else v78[v80[478 -(41 + 435) ]]= #v78[v80[3]];end elseif ((1380<3863) and (v81<=(1014 -(938 + 56 + 7)))) then if (v81>12) then do return;end else local v144=v80[2];local v145,v146=v71(v78[v144](v13(v78,v144 + 1 + 0 ,v80[1506 -(1395 + 108) ])));v73=(v146 + v144) -1 ;local v147=1125 -(936 + 189) ;for v609=v144,v73 do local v610=0;while true do if ((183<=3341) and ((0 + 0)==v610)) then v147=v147 + (1614 -(1565 + 48)) ;v78[v609]=v145[v147];break;end end end end elseif ((v81==14) or (426>3276)) then local v148=v80[2 + 0 ];v78[v148]=v78[v148](v13(v78,v148 + (1139 -(782 + 356)) ,v73));else local v150=v80[269 -(176 + 91) ];local v151=v78[v80[3]];v78[v150 + 1 ]=v151;v78[v150]=v151[v80[10 -6 ]];end elseif (v81<=23) then if ((v81<=(27 -8)) or (3592==4092)) then if (v81<=(1109 -(975 + 117))) then if (v81==(1891 -(157 + 1718))) then v78[v80[2]]={};else local v156=0 + 0 ;local v157;while true do if ((0 -0)==v156) then v157=v80[6 -4 ];do return v78[v157](v13(v78,v157 + (1019 -(697 + 321)) ,v80[7 -4 ]));end break;end end end elseif (v81==(37 -19)) then local v158;v78[v80[4 -2 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v158=v80[1 + (2 -1) ];v78[v158]=v78[v158](v13(v78,v158 + (1 -0) ,v80[3]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1229 -(322 + 905) ]]=v78[v80[3]];v72=v72 + (612 -(602 + 9)) ;v80=v68[v72];v78[v80[1191 -(449 + 740) ]]=v80[875 -(826 + 46) ];v72=v72 + (948 -(245 + 702)) ;v80=v68[v72];v72=v80[9 -6 ];else local v169;local v170;v170=v80[(1205 -(7 + 1197)) + 1 ];v78[v170](v13(v78,v170 + 1 ,v80[1901 -(260 + 1638) ]));v72=v72 + (441 -(382 + 58)) ;v80=v68[v72];v170=v80[6 -4 ];v169=v78[v80[3 + 0 ]];v78[v170 + (1 -0) ]=v169;v78[v170]=v169[v80[(5 + 6) -7 ]];v72=v72 + (1206 -(902 + 303)) ;v80=v68[v72];v78[v80[2]]=v78[v80[5 -2 ]][v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v170=v80[1692 -(1121 + 199 + 370) ];v78[v170]=v78[v170](v13(v78,v170 + (215 -(22 + 192)) ,v80[3]));v72=v72 + (684 -(483 + 200)) ;v80=v68[v72];v78[v80[1465 -(1404 + 59) ]]=v78[v80[8 -5 ]];v72=v72 + ((320 -(27 + 292)) -0) ;v80=v68[v72];v170=v80[767 -(468 + 297) ];v169=v78[v80[565 -(334 + 228) ]];v78[v170 + 1 ]=v169;v78[v170]=v169[v80[13 -9 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[5 -2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[3];end elseif ((3380==3380) and (v81<=(257 -((413 -272) + 95)))) then if ((4841>=4597) and (v81>(25 -5))) then local v190;local v191;v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v191=v80[4 -2 ];v78[v191]=v78[v191](v13(v78,v191 + (2 -1) ,v80[1 + 2 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + ((4 -3) -0) ;v80=v68[v72];v191=v80[(3 -1) + 0 ];v190=v78[v80[3]];v78[v191 + ((311 -147) -(92 + (210 -(43 + 96)))) ]=v190;v78[v191]=v190[v80[2 + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[767 -(574 + (779 -588)) ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v191=v80[2 + 0 ];v78[v191](v13(v78,v191 + (2 -1) ,v80[2 + 1 ]));v72=v72 + (850 -(254 + 595)) ;v80=v68[v72];v78[v80[(289 -161) -(55 + 71) ]]=v80[(3 + 0) -0 ];else local v206=v80[1792 -(573 + 1217) ];v78[v206](v13(v78,v206 + (2 -1) ,v80[1 + 1 + 1 ]));end elseif (v81==(34 -12)) then local v207;local v208,v209;local v210;local v211;v78[v80[941 -(714 + (444 -219)) ]]=v61[v80[2 + 1 ]];v72=v72 + ((3 -1) -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v61[v80[1 + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v211=v80[808 -(38 + 80 + 688) ];v210=v78[v80[51 -(25 + 23) ]];v78[v211 + 1 + 0 ]=v210;v78[v211]=v210[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1888 -(927 + 959) ]]=v80[10 -7 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[734 -((1767 -(1414 + 337)) + 716) ]]=v80[5 -2 ]~=(97 -((1951 -(1642 + 298)) + 86)) ;v72=v72 + ((4 -2) -1) ;v80=v68[v72];v211=v80[287 -(175 + 110) ];v208,v209=v71(v78[v211](v13(v78,v211 + (2 -(2 -1)) ,v80[14 -11 ])));v73=(v209 + v211) -(1797 -(503 + (3836 -2543))) ;v207=(0 + 0) -0 ;for v611=v211,v73 do local v612=0 + 0 ;while true do if (v612==(1061 -(631 + 179 + 251))) then v207=v207 + 1 ;v78[v611]=v208[v207];break;end end end v72=v72 + 1 + 0 ;v80=v68[v72];v211=v80[1 + 1 ];v78[v211]=v78[v211](v13(v78,v211 + 1 + 0 ,v73));v72=v72 + (973 -(357 + 615)) ;v80=v68[v72];v78[v80[535 -(43 + 490) ]]();v72=v72 + 1 ;v80=v68[v72];do return;end else local v227=733 -(711 + 22) ;local v228;while true do if ((3962==3962) and (v227==((0 + 0) -0))) then v228=v80[861 -(240 + (1518 -899)) ];v78[v228](v78[v228 + 1 + 0 + 0 ]);break;end end end elseif ((v81<=(42 -15)) or (3057<=2101)) then if ((v81<=(2 + 23)) or (3977>=4688)) then if ((v81==24) or (774<455)) then local v229;local v230,v231;local v232;local v233;v78[v80[2]]=v61[v80[3]];v72=v72 + (1745 -(1344 + 400)) ;v80=v68[v72];v78[v80[407 -(255 + 150) ]]=v61[v80[3 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v233=v80[2 + (0 -0) ];v232=v78[v80[3]];v78[v233 + 1 + 0 ]=v232;v78[v233]=v232[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[8 -6 ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1741 -(404 + 1335) ]]=v80[409 -(183 + 223) ]~=((0 + 0) -0) ;v72=v72 + 1 ;v80=v68[v72];v233=v80[2 + 0 ];v230,v231=v71(v78[v233](v13(v78,v233 + 1 ,v80[2 + 1 ])));v73=(v231 + v233) -(338 -(10 + 327)) ;v229=0 + 0 ;for v613=v233,v73 do v229=v229 + 1 ;v78[v613]=v230[v229];end v72=v72 + (339 -(118 + 220)) ;v80=v68[v72];v233=v80[1 + 1 ];v78[v233]=v78[v233](v13(v78,v233 + (450 -(108 + 341)) ,v73));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]();v72=v72 + (4 -3) ;v80=v68[v72];do return;end else local v249=0;local v250;local v251;while true do if ((v249==(1493 -(711 + 782))) or (832==2347)) then v250=nil;v251=nil;v251=v80[(1304 -(384 + 917)) -1 ];v249=1;end if (v249==(473 -(270 + 199))) then v78[v80[2]]=v80[1 + 2 ];v72=v72 + 1 ;v80=v68[v72];v249=702 -(128 + 569) ;end if (v249==(1825 -(580 + (2782 -(1407 + 136))))) then v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3]];v72=v72 + (1888 -(687 + 1200)) + 0 ;v249=7;end if ((v249==8) or (1934==2777)) then v80=v68[v72];v72=v80[1 + 2 ];break;end if (((1 + 0)==v249) or (604==4669)) then v78[v251](v13(v78,v251 + 1 ,v80[1713 -(556 + 1154) ]));v72=v72 + (2 -1) ;v80=v68[v72];v249=2 + 0 ;end if (v249==7) then v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1168 -(645 + 522)) ;v249=(6325 -4527) -(1010 + 780) ;end if (v249==(3 + 0)) then v78[v251]=v250[v80[19 -15 ]];v72=v72 + (2 -(96 -(9 + 86))) ;v80=v68[v72];v249=1840 -(1045 + 791) ;end if (((426 -(275 + 146))==v249) or (2088>2395)) then v251=v80[4 -2 ];v78[v251]=v78[v251](v13(v78,v251 + 1 ,v80[4 -1 ]));v72=v72 + (506 -(351 + 154)) ;v249=(257 + 1323) -(1281 + 293) ;end if ((268 -(28 + 238))==v249) then v251=v80[2];v250=v78[v80[6 -3 ]];v78[v251 + (1560 -(1381 + 178)) ]=v250;v249=3 + 0 ;end end end elseif ((1992<=2618) and (v81==(21 + 5))) then local v252;local v253;v78[v80[1 + 1 ]]=v80[10 -7 ];v72=v72 + 1 ;v80=v68[v72];v253=v80[2 + 0 ];v78[v253]=v78[v253](v13(v78,v253 + (65 -(29 + 35)) ,v80[473 -(381 + 89) ]));v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + (1 -(0 -0)) ;v80=v68[v72];v253=v80[2];v252=v78[v80[1159 -(1074 + 82) ]];v78[v253 + (1 -(0 -0)) ]=v252;v78[v253]=v252[v80[1788 -(214 + 1570) ]];v72=v72 + (1456 -(990 + 465)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[1729 -(1668 + 58) ]][v80[4]];v72=v72 + ((409 + 218) -((1524 -(53 + 959)) + 114)) ;v80=v68[v72];v78[v80[5 -3 ]]=v61[v80[3]];v72=v72 + (1 -(408 -(312 + 96))) ;v80=v68[v72];v78[v80[2]]=v78[v80[10 -7 ]][v80[2 + 2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 + 0 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[10 -7 ];else local v273=v69[v80[1997 -(109 + 1885) ]];local v274;local v275={};v274=v10({},{__index=function(v616,v617) local v618=v275[v617];return v618[1470 -(1269 + 200) ][v618[2]];end,__newindex=function(v619,v620,v621) local v622=0 -0 ;local v623;while true do if (v622==(815 -(98 + 717))) then v623=v275[v620];v623[827 -(802 + 24) ][v623[2 -0 ]]=v621;break;end end end});for v624=1 -0 ,v80[4] do v72=v72 + 1 + 0 ;local v625=v68[v72];if (v625[1]==(41 + 12)) then v275[v624-((900 -(813 + 86)) + 0) ]={v78,v625[3]};else v275[v624-(3 -2) ]={v60,v625[3 + 0 ]};end v77[ #v77 + 1 ]=v275;end v78[v80[2]]=v29(v273,v274,v61);end elseif ((v81<=(22 + 7 + 0)) or (3318==418)) then if (v81>(14 + 14)) then local v277=1433 -(797 + 636) ;local v278;while true do if (v277==((7 -3) -3)) then v80=v68[v72];v278=v80[1621 -(1427 + (684 -(18 + 474))) ];v78[v278]=v78[v278](v13(v78,v278 + 1 ,v80[1 + 1 + 1 ]));v277=4 -2 ;end if (v277==4) then v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[2 + 1 ];break;end if (((1063 -737) -(192 + 134))==v277) then v278=nil;v78[v80[1278 -(316 + 960) ]]=v80[2 + 1 ];v72=v72 + 1 ;v277=1 + 0 ;end if (v277==(2 + 0)) then v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[553 -(83 + 468) ]]=v78[v80[3]];v277=1809 -(1202 + 604) ;end if (v277==(13 -(1096 -(860 + 226)))) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[8 -5 ];v277=307 -(121 + 182) ;end end else local v279;v78[v80[327 -(45 + 280) ]]=v78[v80[3]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v279=v80[2];v78[v279]=v78[v279](v13(v78,v279 + 1 + 0 + 0 ,v80[2 + 1 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[5 -2 ];v72=v72 + 1 ;v80=v68[v72];v72=v80[1914 -(340 + 1571) ];end elseif ((v81<=(12 + 18)) or (4067<=2537)) then v78[v80[1774 -(1733 + 39) ]]=v78[v80[8 -5 ]] + v80[4] ;elseif (v81==31) then v78[v80[1036 -(125 + 909) ]]=v80[1951 -(1096 + 852) ] + v78[v80[(1242 -(988 + 252)) + 2 ]] ;else local v649;local v650,v651;local v652;local v653;v78[v80[2 -0 ]]=v61[v80[1 + 2 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[514 -(409 + 103) ]]=v61[v80[3]];v72=v72 + (237 -(46 + 190)) ;v80=v68[v72];v653=v80[97 -(51 + 44) ];v652=v78[v80[1 + 2 ]];v78[v653 + ((413 + 905) -(1114 + 203)) ]=v652;v78[v653]=v652[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[728 -(228 + 498) ]]=v80[1 + 2 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1972 -(49 + 1921)) + 0 ]]=v80[666 -(174 + 489) ]~=(0 -0) ;v72=v72 + (1906 -(830 + 1075)) ;v80=v68[v72];v653=v80[526 -(303 + 221) ];v650,v651=v71(v78[v653](v13(v78,v653 + (1270 -(231 + 1038)) ,v80[3])));v73=(v651 + v653) -(1 + (890 -(223 + 667))) ;v649=0;for v745=v653,v73 do v649=v649 + (1163 -(171 + 991)) ;v78[v745]=v650[v649];end v72=v72 + (53 -(51 + 1)) ;v80=v68[v72];v653=v80[8 -6 ];v78[v653]=v78[v653](v13(v78,v653 + (2 -1) ,v73));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]();v72=v72 + ((5 -2) -2) ;v80=v68[v72];do return;end end elseif (v81<=(141 -92)) then if (v81<=(64 -(51 -27))) then if ((v81<=36) or (4169<=4060)) then if ((v81<=(104 -70)) or (86>=606)) then if (v81==(1281 -(111 + 1137))) then v78[v80[(1285 -(146 + 979)) -(91 + 67) ]]={};v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[526 -(423 + 100) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[7 -4 ]][v80[3 + 1 ]];v72=v72 + (772 -(326 + 445)) ;v80=v68[v72];v78[v80[2]]=v61[v80[13 -10 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]][v80[715 -(530 + 181) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[883 -(614 + 267) ]]=v61[v80[35 -(19 + 13) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(607 -(311 + 294)) -(0 -0) ]]=v78[v80[6 -3 ]][v80[2 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(1444 -(496 + 947)) + 1 ]]=v61[v80[4 -1 ]];v72=v72 + ((1359 -(1233 + 125)) -0) ;v80=v68[v72];if ( not v78[v80[1814 -(1293 + 519) ]] or (153>=2453)) then v72=v72 + (1 -0) ;else v72=v80[7 -(2 + 2) ];end else local v306=0 -0 ;local v307;while true do if ((v306==((0 + 0) -0)) or (2676>=4227)) then v307=v80[2];v78[v307]=v78[v307](v13(v78,v307 + (2 -1) ,v80[2 + 1 ]));break;end end end elseif ((v81>35) or (283>=2823)) then local v308;local v309;v309=v80[2];v78[v309](v13(v78,v309 + 1 + 0 + 0 ,v80[6 -3 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v309=v80[1 + 1 ];v308=v78[v80[2 + 1 ]];v78[v309 + ((2742 -(963 + 682)) -(709 + 323 + 64)) ]=v308;v78[v309]=v308[v80[1862 -(673 + 1185) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1509 -(504 + 1000)) -3 ]]=v80[(7 + 2) -6 ];v72=v72 + (1 -0) ;v80=v68[v72];v309=v80[2 + 0 ];v78[v309]=v78[v309](v13(v78,v309 + 1 + 0 ,v80[3]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[5 -2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[1883 -(446 + 1434) ];v72=v72 + (1284 -(1040 + 243)) ;v80=v68[v72];v72=v80[8 -5 ];else local v325;v78[v80[1849 -(559 + 1288) ]]=v78[v80[3]];v72=v72 + (1932 -(609 + 1322)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (455 -(13 + 402 + 39)) ;v80=v68[v72];v78[v80[7 -5 ]]=v80[7 -4 ];v72=v72 + ((1 + 3) -3) ;v80=v68[v72];v325=v80[1 + 1 ];v78[v325]=v78[v325](v13(v78,v325 + (3 -2) ,v80[(2 -0) + 1 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]][v80[3]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v325=v80[2 + 0 ];v78[v325]=v78[v325](v13(v78,v325 + ((253 + 181) -(153 + 280)) ,v80[8 -5 ]));v72=v72 + (183 -(156 + 26)) + 0 ;v80=v68[v72];v78[v80[1 + 0 + 1 ]][v80[2 + (1 -0) ]]=v78[v80[4 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[(166 -(149 + 15)) + 1 ]];v72=v72 + (668 -(89 + 578)) ;v80=v68[v72];v78[v80[(962 -(890 + 70)) + 0 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3];v72=v72 + (1050 -(572 + 477)) ;v80=v68[v72];v325=v80[(118 -(39 + 78)) + 1 ];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[1 + (484 -(14 + 468)) ]));v72=v72 + (87 -(84 + 2)) ;v80=v68[v72];v78[v80[2 -0 ]][v80[3 + 0 ]]=v78[v80[(1860 -1014) -(497 + 345) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + (2 -1) ]]=v80[1336 -(605 + 728) ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v325=v80[1 + 1 ];v78[v325]=v78[v325](v13(v78,v325 + (3 -2) ,v80[3 + 0 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[492 -(207 + 250 + 32) ]]=v78[v80[2 + 2 ]];v72=v72 + (1403 -(832 + 570)) ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]=v78[v80[1 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v325=v80[798 -((1125 -537) + 208) ];v78[v325]=v78[v325](v13(v78,v325 + (2 -1) ,v80[1803 -(884 + 916) ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 + 0 ]][v80[3]]=v78[v80[657 -((815 -583) + 421) ]];v72=v72 + (1890 -(1569 + 9 + 311)) ;v80=v68[v72];v78[v80[53 -(12 + 39) ]]=v78[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v80[608 -(316 + 289) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]=v80[1456 -(666 + 787) ];v72=v72 + (426 -(360 + (201 -136))) ;v80=v68[v72];v325=v80[2];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[257 -(79 + 175) ]));v72=v72 + ((3 -2) -0) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v78[v80[12 -8 ]];v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[901 -(503 + 396) ]]=v78[v80[3]];v72=v72 + (182 -(92 + 89)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v325=v80[1 + 1 ];v78[v325]=v78[v325](v13(v78,v325 + (2 -1) ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[2 + 0 + 1 ]]=v78[v80[12 -8 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[4 -1 ]];v72=v72 + (1245 -(485 + 759)) ;v80=v68[v72];v78[v80[2]]=v80[6 -3 ];v72=v72 + (1190 -(442 + 747)) ;v80=v68[v72];v78[v80[1137 -(832 + 303) ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v325=v80[948 -(88 + 858) ];v78[v325]=v78[v325](v13(v78,v325 + 1 ,v80[7 -4 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3 + 0 ]]=v78[v80[1 + 0 + 3 ]];v72=v72 + ((3817 -3027) -(766 + 23)) ;v80=v68[v72];v78[v80[1712 -(1596 + 114) ]]=v78[v80[(36 -22) -11 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(715 -(164 + 549)) -(1438 -(1059 + 379)) ]]=v80[3];v72=v72 + ((2 -0) -1) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v325=v80[(558 + 517) -(1036 + 37) ];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[5 -2 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v78[v80[1484 -(641 + 839) ]];v72=v72 + ((155 + 759) -(910 + 3)) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1687 -((1858 -(145 + 247)) + 179 + 39) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(532 + 618) -(556 + 592) ]]=v80[2 + 1 ];v72=v72 + (809 -((975 -646) + 479)) ;v80=v68[v72];v78[v80[856 -(174 + 680) ]]=v80[10 -7 ];v72=v72 + 1 ;v80=v68[v72];v325=v80[3 -1 ];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[742 -(396 + 343) ]));v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[1479 -(29 + 1448) ]][v80[(1200 + 192) -(135 + 1254) ]]=v78[v80[14 -10 ]];v72=v72 + ((6 -2) -(723 -(254 + 466))) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[1530 -(389 + 1138) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[577 -(102 + 472) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (1546 -(320 + 1225)) ;v80=v68[v72];v325=v80[2 -0 ];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[1467 -(157 + 1307) ]));v72=v72 + (561 -(544 + 16)) ;v80=v68[v72];v78[v80[1861 -(821 + 1038) ]][v80[3]]=v78[v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[4 -2 ]]=v80[(3269 -2240) -(834 + 192) ];v72=v72 + (629 -(294 + 334)) + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1 + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v325=v80[306 -(300 + 4) ];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[7 -4 ]));v72=v72 + (363 -(112 + 250)) ;v80=v68[v72];v78[v80[1 + (254 -(236 + 17)) ]][v80[7 -4 ]]=v78[v80[2 + 1 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[(10 -7) + (0 -0) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (1415 -(1001 + 413)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[885 -(244 + 638) ];v72=v72 + (694 -(627 + 66)) ;v80=v68[v72];v325=v80[5 -3 ];v78[v325]=v78[v325](v13(v78,v325 + (603 -(512 + 75 + 15)) ,v80[(2703 -(413 + 381)) -(1665 + 241) ]));v72=v72 + (718 -(373 + 344)) ;v80=v68[v72];v78[v80[1 + 0 + 1 ]][v80[3]]=v78[v80[2 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[1102 -(35 + 1064) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[6 -3 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(2632 -1394) -(298 + 938) ]]=v80[1262 -((604 -371) + 1026) ];v72=v72 + (1667 -(636 + 1030)) ;v80=v68[v72];v325=v80[2 + 0 ];v78[v325]=v78[v325](v13(v78,v325 + 1 ,v80[3 + 0 ]));v72=v72 + 1 + (1970 -(582 + 1388)) ;v80=v68[v72];v78[v80[1 + (1 -0) ]][v80[224 -(55 + 166) ]]=v78[v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(365 -(326 + 38)) + 1 ]]=v80[11 -(23 -15) ];v72=v72 + (298 -(36 + 261)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[1371 -(34 + 1334) ];v72=v72 + 1 + 0 ;v80=v68[v72];v325=v80[2];v78[v325]=v78[v325](v13(v78,v325 + 1 + 0 ,v80[1286 -(1035 + 248) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[23 -(20 + 1) ]][v80[2 + (1 -0) ]]=v78[v80[323 -((754 -(47 + 573)) + 66 + 119) ]];v72=v72 + (1134 -(549 + (2480 -1896))) ;v80=v68[v72];v78[v80[687 -((509 -195) + 371) ]]=v80[10 -(1671 -(1269 + 395)) ];v72=v72 + (969 -(478 + 490)) ;v80=v68[v72];for v627=v80[2 + 0 ],v80[1175 -(786 + 386) ] do v78[v627]=nil;end end elseif (v81<=((614 -(76 + 416)) -84)) then if (v81>(1416 -((1498 -(319 + 124)) + 324))) then local v413=0;local v414;local v415;local v416;local v417;while true do if (v413==(1340 -((2498 -1405) + 247))) then v414=nil;v415,v416=nil;v417=nil;v78[v80[(1009 -(564 + 443)) + 0 ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v60[v80[(24 -15) -6 ]];v413=1;end if (v413==(28 -18)) then v73=(v416 + v417) -1 ;v414=(458 -(337 + 121)) -(0 -0) ;for v882=v417,v73 do local v883=0 + 0 ;while true do if (v883==((0 -0) -(1911 -(1261 + 650)))) then v414=v414 + 1 ;v78[v882]=v415[v414];break;end end end v72=v72 + 1 ;v80=v68[v72];v417=v80[6 -4 ];v415,v416=v71(v78[v417](v13(v78,v417 + 1 + 0 ,v73)));v413=28 -17 ;end if ((4242>366) and (v413==(690 -(364 + 138 + 186)))) then v80=v68[v72];v78[v80[5 -3 ]]=v60[v80[3]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[12 -9 ]];v72=v72 + 1 ;v80=v68[v72];v413=4 -1 ;end if (v413==4) then v415,v416=v71(v78[v417](v13(v78,v417 + ((2 -0) -1) ,v80[3])));v73=(v416 + v417) -(1269 -(1249 + (1836 -(772 + 1045)))) ;v414=0 + 0 ;for v884=v417,v73 do v414=v414 + (3 -(1 + 1)) ;v78[v884]=v415[v414];end v72=v72 + ((1231 -(102 + 42)) -(686 + 400)) ;v80=v68[v72];v417=v80[2 + 0 ];v413=5;end if (v413==(240 -(73 + 156))) then v73=(v416 + v417) -(1 + 0) ;v414=0;for v887=v417,v73 do local v888=811 -(721 + 90) ;while true do if (v888==(0 + 0)) then v414=v414 + (3 -2) ;v78[v887]=v415[v414];break;end end end v72=v72 + 1 ;v80=v68[v72];v417=v80[472 -(224 + 246) ];v78[v417]=v78[v417](v13(v78,v417 + (1 -0) ,v73));v413=21 -9 ;end if (v413==12) then v72=v72 + 1 + (1844 -(1524 + 320)) ;v80=v68[v72];v78[v80[(1271 -(1049 + 221)) + 1 ]]=v78[v80[3 + 0 ]]%v80[7 -3 ] ;v72=v72 + ((159 -(18 + 138)) -2) ;v80=v68[v72];v417=v80[2];v415,v416=v71(v78[v417](v78[v417 + 1 ]));v413=526 -(203 + 310) ;end if (v413==(1994 -(1238 + 755))) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + (2 -1) ]]=v60[v80[1537 -(709 + 825) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 -0 ]]=v60[v80[3]];v72=v72 + (865 -(196 + 668)) ;v413=(1109 -(67 + 1035)) -5 ;end if ((4712==4712) and (v413==(26 -13))) then v73=(v416 + v417) -1 ;v414=833 -(171 + 662) ;for v889=v417,v73 do v414=v414 + (94 -(4 + 89)) ;v78[v889]=v415[v414];end v72=v72 + ((351 -(136 + 212)) -2) ;v80=v68[v72];v417=v80[1 + 1 ];v78[v417](v13(v78,v417 + (4 -3) ,v73));break;end if (v413==(3 + 4)) then v80=v68[v72];v78[v80[1488 -((148 -113) + 1163 + 288) ]]=v78[v80[3]]%v78[v80[(1344 + 113) -(28 + 1425) ]] ;v72=v72 + (1994 -(941 + 1052)) ;v80=v68[v72];v78[v80[2 + (1604 -(240 + 1364)) ]]=v80[1517 -(822 + 692) ] + v78[v80[4]] ;v72=v72 + (1 -0) ;v80=v68[v72];v413=4 + 4 ;end if (v413==(305 -(45 + 252))) then v78[v80[2]]= #v78[v80[3 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[2 + 1 ]]%v78[v80[9 -5 ]] ;v72=v72 + (434 -(114 + 319)) ;v80=v68[v72];v78[v80[(1084 -(1050 + 32)) -(0 -0) ]]=v80[3 -0 ] + v78[v80[3 + 1 ]] ;v413=12 -3 ;end if (v413==3) then v78[v80[2]]=v78[v80[5 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v78[v80[1966 -(556 + 1407) ]] + v80[1210 -(741 + 465) ] ;v72=v72 + (466 -(101 + 69 + 295)) ;v80=v68[v72];v417=v80[2 + 0 ];v413=4 + (1055 -(331 + 724)) ;end if ((3335>=2992) and (v413==6)) then v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1232 -(957 + 273) ]]= #v78[v80[1 + 2 ]];v72=v72 + 1 ;v413=7;end if (v413==9) then v72=v72 + (645 -(269 + 375)) + 0 ;v80=v68[v72];v78[v80[7 -5 ]]=v78[v80[7 -4 ]] + v80[11 -7 ] ;v72=v72 + (4 -3) ;v80=v68[v72];v417=v80[727 -(267 + 458) ];v415,v416=v71(v78[v417](v13(v78,v417 + (1781 -(389 + 1391)) ,v80[2 + 1 ])));v413=4 + 6 ;end if (v413==(1 + 4)) then v78[v417]=v78[v417](v13(v78,v417 + ((3 -1) -1) ,v73));v72=v72 + (952 -(783 + 168)) ;v80=v68[v72];v78[v80[2]]=v60[v80[9 -6 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[313 -(309 + 2) ]]=v60[v80[9 -6 ]];v413=824 -(667 + 151) ;end end else local v418;local v419,v420;local v421;local v422;v78[v80[2]]=v61[v80[1215 -(1090 + 122) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[6 -4 ]]=v61[v80[3 + 0 ]];v72=v72 + (1119 -(628 + 490)) ;v80=v68[v72];v422=v80[1 + 1 ];v421=v78[v80[(1504 -(1410 + 87)) -(1901 -(1504 + 393)) ]];v78[v422 + (4 -3) ]=v421;v78[v422]=v421[v80[778 -(431 + 343) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -(8 -5) ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3]~=(0 + 0) ;v72=v72 + 1 ;v80=v68[v72];v422=v80[1 + 1 ];v419,v420=v71(v78[v422](v13(v78,v422 + ((4399 -2703) -(556 + 1139)) ,v80[18 -(6 + 9) ])));v73=(v420 + v422) -(1 + 0) ;v418=0 + (796 -(461 + 335)) ;for v629=v422,v73 do local v630=(22 + 147) -(28 + 141) ;while true do if ((1482>=1460) and (v630==(0 + 0))) then v418=v418 + ((1762 -(1730 + 31)) -0) ;v78[v629]=v419[v418];break;end end end v72=v72 + 1 + 0 ;v80=v68[v72];v422=v80[1319 -(486 + 831) ];v78[v422]=v78[v422](v13(v78,v422 + (2 -1) ,v73));v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]();v72=v72 + 1 + 0 ;v80=v68[v72];do return;end end elseif ((v81>(123 -84)) or (171>=4691)) then local v436;local v437;v78[v80[1265 -(668 + 595) ]]=v78[v80[3 + (1667 -(728 + 939)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v437=v80[2];v436=v78[v80[(28 -20) -5 ]];v78[v437 + (291 -(23 + 267)) ]=v436;v78[v437]=v436[v80[(3951 -2003) -(1129 + 815) ]];v72=v72 + (388 -(371 + 16)) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1751 -(1326 + 424)) ;v80=v68[v72];v437=v80[2];v78[v437]=v78[v437](v13(v78,v437 + ((2 -1) -(1068 -(138 + 930))) ,v80[10 -7 ]));v72=v72 + (119 -(88 + 30)) ;v80=v68[v72];v78[v80[773 -(720 + 51) ]]=v78[v80[6 -3 ]];v72=v72 + (1777 -(421 + 1355)) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[2 + 1 ];else local v452=0;local v453;local v454;local v455;while true do if (v452==(1083 -(286 + 797))) then v453=v80[2 + 0 ];v454=v78[v453 + (7 -(4 + 1)) ];v452=1;end if (v452==(1 -0)) then v455=v78[v453] + v454 ;v78[v453]=v455;v452=441 -(397 + 42) ;end if (v452==(1 + 1)) then if (v454>((686 + 114) -(24 + 776))) then if ((v455<=v78[v453 + (1 -0) ]) or (2173>4840)) then local v965=785 -(222 + 563) ;while true do if (((0 -0)==v965) or (3884<1346)) then v72=v80[3 + (0 -0) ];v78[v453 + (193 -(23 + 167)) ]=v455;break;end end end elseif ((3360==3360) and (v455>=v78[v453 + (1799 -(690 + (2874 -(459 + 1307)))) ])) then local v966=0 + 0 ;while true do if ((1082<=2816) and (v966==(0 + 0))) then v72=v80[851 -(40 + 808) ];v78[v453 + 1 + 2 ]=v455;break;end end end break;end end end elseif ((v81<=44) or (3830>=4328)) then if ((v81<=(160 -118)) or (1099>=4754)) then if (v81==41) then v78[v80[2 + 0 ]]=v29(v69[v80[2 + 1 ]],nil,v61);else for v631=v80[(1872 -(474 + 1396)) + 0 ],v80[(1001 -427) -(47 + 524) ] do v78[v631]=nil;end end elseif ((4871<=4892) and (v81>(28 + 15))) then local v457=0 -0 ;local v458;local v459;while true do if (v457==(1 -0)) then v72=v72 + 1 ;v80=v68[v72];v459=v80[4 -2 ];v457=1728 -(1165 + 561) ;end if (v457==7) then v78[v80[1 + 0 + 1 ]]=v80[9 -6 ];break;end if (v457==(2 + 2)) then v459=v80[481 -(341 + 138) ];v458=v78[v80[1 + 2 ]];v78[v459 + (1 -0) ]=v458;v457=331 -(89 + 237) ;end if ((v457==(6 -4)) or (2393<=1632)) then v78[v459]=v78[v459](v13(v78,v459 + ((1 + 0) -0) ,v80[884 -(581 + 300) ]));v72=v72 + (1221 -(855 + 365)) ;v80=v68[v72];v457=6 -3 ;end if (v457==(1 + (5 -3))) then v78[v80[1237 -(1030 + 205) ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v457=4;end if ((2414==2414) and ((0 + 0)==v457)) then v458=nil;v459=nil;v78[v80[288 -(156 + 130) ]]=v78[v80[3]][v80[8 -4 ]];v457=1;end if ((1584==1584) and (v457==(9 -3))) then v78[v80[3 -1 ]]=v78[v80[3]][v80[2 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v457=76 -(2 + 8 + 59) ;end if ((2285>2073) and (v457==(2 + 3))) then v78[v459]=v458[v80[4]];v72=v72 + (4 -3) ;v80=v68[v72];v457=1169 -((2239 -1568) + 492) ;end end else local v460=(0 -0) + 0 ;local v461;while true do if ((1216 -(369 + 846))==v460) then v461=v80[1 + (592 -(562 + 29)) ];v78[v461]=v78[v461](v13(v78,v461 + 1 ,v80[3 + 0 + 0 ]));v72=v72 + (1946 -(1036 + 909)) ;v80=v68[v72];v460=2;end if ((1422 -(374 + 1045))==v460) then v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[4 -1 ];break;end if (v460==(203 -(11 + 192))) then v461=nil;v78[v80[2 + 0 ]]=v80[178 -(135 + 32 + 8) ];v72=v72 + (2 -1) ;v80=v68[v72];v460=1 + 0 ;end if ((v460==2) or (2894<2799)) then v78[v80[5 -3 ]]=v78[v80[6 -3 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(816 -(448 + 190)) -(50 + 126) ]]=v80[(3 + 5) -5 ];v460=1 + 2 ;end end end elseif (v81<=46) then if (v81>(1458 -(1233 + 180))) then local v462;local v463;v463=v80[(439 + 532) -(522 + 447) ];v78[v463](v13(v78,v463 + (1422 -(107 + 1314)) ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v463=v80[5 -3 ];v462=v78[v80[2 + 1 ]];v78[v463 + (1 -0) ]=v462;v78[v463]=v462[v80[15 -11 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1912 -(716 + 1194) ]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v463=v80[505 -(74 + 429) ];v78[v463]=v78[v463](v13(v78,v463 + (1 -0) ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(3 + 1) -2 ]]=v78[v80[3 + 0 ]];v72=v72 + (2 -(3 -2)) ;v80=v68[v72];v463=v80[4 -2 ];v462=v78[v80[436 -(279 + 154) ]];v78[v463 + (779 -(454 + 324)) ]=v462;v78[v463]=v462[v80[4 + 0 ]];v72=v72 + (18 -((36 -24) + 5)) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v463=v80[1 + 1 ];v78[v463]=v78[v463](v13(v78,v463 + 1 ,v80[1096 -(277 + 816) ]));v72=v72 + (4 -3) ;v80=v68[v72];v78[v80[1185 -(1058 + 125) ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(2471 -(1307 + 187)) -(815 + 160) ]]=v80[3];else v78[v80[8 -6 ]]=v61[v80[3]];end elseif (v81<=(111 -64)) then local v489;local v490,v491;local v492;local v493;v78[v80[1 + 1 ]]=v61[v80[8 -5 ]];v72=v72 + (1899 -((162 -121) + 1857)) ;v80=v68[v72];v78[v80[1895 -(1222 + 671) ]]=v61[v80[3]];v72=v72 + 1 ;v80=v68[v72];v493=v80[5 -3 ];v492=v78[v80[3 -0 ]];v78[v493 + 1 ]=v492;v78[v493]=v492[v80[1186 -(229 + (2231 -1278)) ]];v72=v72 + (1775 -(1111 + (2032 -1369))) ;v80=v68[v72];v78[v80[2]]=v80[1582 -(874 + (1388 -(232 + 451))) ];v72=v72 + 1 + 0 ;v80=v68[v72];v493=v80[2 + 0 ];v490,v491=v71(v78[v493](v13(v78,v493 + (1 -0) ,v80[1 + 2 ])));v73=(v491 + v493) -(680 -(642 + 37)) ;v489=0 + 0 + 0 ;for v633=v493,v73 do v489=v489 + 1 ;v78[v633]=v490[v489];end v72=v72 + 1 + 0 ;v80=v68[v72];v493=v80[4 -2 ];v78[v493]=v78[v493](v13(v78,v493 + 1 ,v73));v72=v72 + (455 -(233 + 221)) ;v80=v68[v72];v78[v80[4 -2 ]]();v72=v72 + 1 + 0 ;v80=v68[v72];do return;end elseif ((v81==(1589 -(718 + 823))) or (1275>3605)) then local v670=v80[2 + 0 ];local v671,v672=v71(v78[v670](v78[v670 + (806 -(266 + 539)) ]));v73=(v672 + v670) -1 ;local v673=0 -(0 + 0) ;for v835=v670,v73 do v673=v673 + (1226 -(636 + 589)) ;v78[v835]=v671[v673];end else local v674=0 -0 ;local v675;local v676;local v677;local v678;local v679;while true do if (v674==(14 -(571 -(510 + 54)))) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]();v72=v72 + (1016 -(657 + 358)) ;v674=21 -13 ;end if ((240<1190) and (v674==(18 -10))) then v80=v68[v72];do return;end break;end if (v674==(1187 -(1151 + 36))) then v675=nil;v676,v677=nil;v678=nil;v679=nil;v674=1 + 0 ;end if (v674==(2 + 2)) then v78[v80[5 -3 ]]=v80[1835 -(1552 + 280) ];v72=v72 + (835 -(64 + (1551 -781))) ;v80=v68[v72];v679=v80[2 + (36 -(13 + 23)) ];v674=11 -(11 -5) ;end if ((1 + 1)==v674) then v72=v72 + 1 ;v80=v68[v72];v679=v80[1245 -(157 + 1086) ];v678=v78[v80[5 -2 ]];v674=13 -10 ;end if (1==v674) then v78[v80[2 -0 ]]=v61[v80[(3 -0) -0 ]];v72=v72 + (820 -(599 + 220)) ;v80=v68[v72];v78[v80[2]]=v61[v80[(8 -3) -2 ]];v674=1933 -(1813 + 118) ;end if ((5 + 1)==v674) then v72=v72 + (1218 -(841 + (1464 -(830 + 258)))) ;v80=v68[v72];v679=v80[2 -(0 -0) ];v78[v679]=v78[v679](v13(v78,v679 + 1 + 0 + 0 ,v73));v674=19 -12 ;end if ((v674==(864 -(464 + 395))) or (635>2257)) then v676,v677=v71(v78[v679](v13(v78,v679 + ((2 + 0) -1) ,v80[2 + 1 ])));v73=(v677 + v679) -(838 -(467 + 370)) ;v675=0 -0 ;for v949=v679,v73 do local v950=0 + 0 ;while true do if (v950==(0 -0)) then v675=v675 + (1442 -(860 + 581)) ;v78[v949]=v676[v675];break;end end end v674=1 + 5 ;end if ((1961>534) and (v674==((22 -16) -(3 + 0)))) then v78[v679 + (521 -(150 + 370)) ]=v678;v78[v679]=v678[v80[1286 -(74 + 1208) ]];v72=v72 + (242 -(237 + 4)) ;v80=v68[v72];v674=9 -5 ;end end end elseif ((196<=3023) and (v81<=(270 -213))) then if (v81<=(38 + 15)) then if (v81<=(441 -(14 + 376))) then if (v81>(86 -(84 -48))) then local v508=0 + 0 ;local v509;while true do if (v508==2) then v72=v72 + (2 -1) + 0 ;v80=v68[v72];v78[v80[2 + (0 -0) ]]=v78[v80[8 -5 ]];v508=3 + 0 ;end if (v508==1) then v80=v68[v72];v509=v80[80 -(19 + 4 + 55) ];v78[v509]=v78[v509](v13(v78,v509 + (2 -(1 + 0)) ,v80[3]));v508=2 + (0 -0) ;end if (v508==3) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v80[(3 + 1) -1 ];v508=(1428 -(85 + 1341)) + 2 ;end if (v508==4) then v72=v72 + (902 -(652 + 249)) ;v80=v68[v72];v72=v80[4 -1 ];break;end if ((2048<=3047) and (v508==(0 -(0 -0)))) then v509=nil;v78[v80[1870 -((1080 -(45 + 327)) + 1160) ]]=v80[8 -5 ];v72=v72 + 1 ;v508=1 -0 ;end end else local v510=0;while true do if ((31 -(10 + 17))==v510) then v72=v72 + 1 + 0 ;v80=v68[v72];do return;end break;end if (v510==((3267 -1535) -(1400 + 332))) then v78[v80[3 -1 ]]=v61[v80[3]];v72=v72 + (1909 -(242 + 1666)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]][v80[4 + 0 ]];v510=941 -((1352 -(444 + 58)) + 90) ;end if (v510==(3 -(1 + 0))) then v80=v68[v72];v78[v80[1392 -(62 + 298 + 1030) ]]=v78[v80[3 + 0 + 0 ]][v80[4]];v72=v72 + (2 -(2 -1)) ;v80=v68[v72];v510=(1735 -(64 + 1668)) -0 ;end if ((v510==(1664 -(909 + 752))) or (411>=2970)) then v78[v80[1225 -(109 + 1114) ]]=v78[v80[5 -2 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[244 -(6 + 236) ]][v80[(1975 -(1227 + 746)) + (2 -1) ]]=v78[v80[4 + 0 ]];v510=8 -4 ;end if (v510==(1 -(0 -0))) then v72=v72 + (1134 -(1076 + 57)) ;v80=v68[v72];v78[v80[(495 -(415 + 79)) + 1 + 0 ]]=v78[v80[3]][v80[693 -(579 + 110) ]];v72=v72 + 1 ;v510=(492 -(142 + 349)) + 1 ;end end end elseif (v81>(46 + 6)) then v78[v80[2 + 0 ]]=v78[v80[410 -(75 + 99 + 233) ]];else v78[v80[5 -3 ]]=v80[4 -1 ];end elseif (v81<=55) then if ((1312<=2793) and (v81==(25 + 29))) then v72=v80[1177 -(663 + (702 -191)) ];else v78[v80[2]][v80[2 + 1 ]]=v78[v80[4 + 0 ]];end elseif ((v81==(13 + 43)) or (2164>=3404)) then local v518;local v519;local v520;v78[v80[5 -3 ]]={};v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v80[6 -3 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(2 -1) + 1 ]]= #v78[v80[5 -2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[725 -(478 + 244) ];v72=v72 + (518 -((2304 -(1710 + 154)) + 77)) ;v80=v68[v72];v520=v80[1 + 1 ];v519=v78[v520];v518=v78[v520 + (7 -5) ];if (v518>(1556 -(655 + 901))) then if (v519>v78[v520 + 1 + 0 ]) then v72=v80[3 + 0 ];else v78[v520 + (321 -(200 + 118)) + 0 ]=v519;end elseif ((1080<=2918) and (v519<v78[v520 + 1 ])) then v72=v80[11 -8 ];else v78[v520 + ((574 + 874) -(695 + 750)) ]=v519;end else local v531=0 -0 ;local v532;while true do if ((0==v531) or (3426<=1781)) then v532=v80[2 -0 ];v78[v532]=v78[v532]();break;end end end elseif (v81<=(245 -184)) then if (v81<=(410 -(285 + 66))) then if (v81>58) then local v533;local v534;v78[v80[2]]=v80[6 -3 ];v72=v72 + ((2291 -980) -(682 + 628)) ;v80=v68[v72];v534=v80[(1 -0) + 1 ];v78[v534]=v78[v534](v13(v78,v534 + (300 -(176 + 123)) ,v80[2 + 1 + 0 ]));v72=v72 + 1 + 0 + 0 + 0 ;v80=v68[v72];v78[v80[271 -(239 + 30) ]]=v78[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v534=v80[(1 + 2) -(2 -1) ];v533=v78[v80[3]];v78[v534 + ((1252 -(363 + 887)) -1) ]=v533;v78[v534]=v533[v80[319 -(306 + 9) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v78[v80[1 + 2 ]][v80[3 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(1 -0) + 1 ]]=v80[3];else local v549;local v550,v551;local v552;local v553;v78[v80[5 -3 ]]=v61[v80[1378 -((5426 -4286) + 235) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v61[v80[(2 -1) + 2 + 0 ]];v72=v72 + (53 -(33 + 19)) ;v80=v68[v72];v553=v80[2];v552=v78[v80[2 + 1 ]];v78[v553 + (2 -(1665 -(674 + 990))) ]=v552;v78[v553]=v552[v80[2 + 2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 + 0 ];v72=v72 + (690 -(586 + 103)) ;v80=v68[v72];v553=v80[2];v550,v551=v71(v78[v553](v13(v78,v553 + 1 + 0 + 0 ,v80[9 -6 ])));v73=(v551 + v553) -((2359 -870) -(1309 + 179)) ;v549=0 -0 ;for v636=v553,v73 do v549=v549 + 1 + 0 ;v78[v636]=v550[v549];end v72=v72 + 1 ;v80=v68[v72];v553=v80[2];v78[v553]=v78[v553](v13(v78,v553 + 1 ,v73));v72=v72 + (2 -(1056 -(507 + 548))) ;v80=v68[v72];v78[v80[2]]();v72=v72 + 1 ;v80=v68[v72];do return;end end elseif ((v81==(46 + 14)) or (4376<=4070)) then v78[v80[(840 -(289 + 548)) -1 ]]=v80[5 -(1820 -(821 + 997)) ]~=(609 -((550 -(195 + 60)) + 314)) ;else v78[v80[4 -2 ]]();end elseif (v81<=(2025 -(350 + 950 + 662))) then if (v81==((1695 -(251 + 1250)) -132)) then local v567;local v568,v569;local v570;local v571;v78[v80[1757 -(1178 + 577) ]]=v61[v80[2 + 1 ]];v72=v72 + (2 -(2 -1)) ;v80=v68[v72];v571=v80[(967 + 440) -(851 + 554) ];v570=v78[v80[3 + (1032 -(809 + 223)) ]];v78[v571 + (2 -1) ]=v570;v78[v571]=v570[v80[8 -(5 -1) ]];v72=v72 + (303 -(115 + 187)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3 + 0 ];v72=v72 + (3 -2) ;v80=v68[v72];v571=v80[1163 -(160 + 1001) ];v568,v569=v71(v78[v571](v13(v78,v571 + 1 + 0 ,v80[3 + 0 ])));v73=(v569 + v571) -(1 -0) ;v567=0;for v639=v571,v73 do v567=v567 + (2 -1) ;v78[v639]=v568[v567];end v72=v72 + (359 -(237 + 121)) ;v80=v68[v72];v571=v80[899 -(525 + 372) ];v78[v571]=v78[v571](v13(v78,v571 + (1 -0) ,v73));v72=v72 + (3 -2) ;v80=v68[v72];v571=v80[144 -(96 + 46) ];v78[v571]=v78[v571]();v72=v72 + ((2572 -1794) -(643 + 134)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[7 -(3 + 2) ]]=v78[v80[3 + 0 ]][v80[7 -(620 -(14 + 603)) ]];v72=v72 + ((130 -(118 + 11)) -0) ;v80=v68[v72];v78[v80[721 -(316 + 403) ]]=v80[2 + 1 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[2 + 1 ]][v80[9 -5 ]];else local v592;local v593;v78[v80[2 + 0 ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v593=v80[9 -(2 + 5) ];v78[v593]=v78[v593](v13(v78,v593 + (1 -0) ,v80[1 + 2 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v78[v80[1 + 2 ]];v72=v72 + (2 -1) ;v80=v68[v72];v593=v80[19 -(12 + 5) ];v592=v78[v80[3]];v78[v593 + ((3 + 0) -2) ]=v592;v78[v593]=v592[v80[8 -4 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1 + 2 ]][v80[1977 -(1656 + 317) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[7 -4 ];end elseif (v81<=(314 -250)) then local v608=v80[356 -(5 + 349) ];v78[v608](v13(v78,v608 + (4 -3) ,v73));elseif (v81==(1336 -(266 + 1005))) then local v680=0;local v681;local v682;local v683;local v684;local v685;while true do if ((v680==(4 + 2)) or (805>4162)) then do return;end break;end if (v680==(13 -9)) then v73=(v683 + v685) -1 ;v681=(0 -0) -0 ;for v951=v685,v73 do v681=v681 + (1697 -(561 + 1135)) ;v78[v951]=v682[v681];end v72=v72 + (1 -0) ;v80=v68[v72];v685=v80[6 -(953 -(551 + 398)) ];v680=1071 -(321 + 186 + 559) ;end if (v680==(7 -4)) then v80=v68[v72];v78[v80[6 -(2 + 2) ]]=v80[(318 + 73) -(212 + 176) ]~=((3365 -2460) -(250 + 655)) ;v72=v72 + (2 -1) ;v80=v68[v72];v685=v80[2 -0 ];v682,v683=v71(v78[v685](v13(v78,v685 + (1 -0) ,v80[1959 -(1869 + 87) ])));v680=13 -9 ;end if (v680==1) then v80=v68[v72];v78[v80[1903 -(484 + 1417) ]]=v61[v80[6 -3 ]];v72=v72 + 1 ;v80=v68[v72];v685=v80[2 -0 ];v684=v78[v80[776 -(48 + (1670 -945)) ]];v680=(1 + 1) -0 ;end if (v680==(0 -0)) then v681=nil;v682,v683=nil;v684=nil;v685=nil;v78[v80[2]]=v61[v80[2 + 1 ]];v72=v72 + 1 ;v680=2 -1 ;end if (v680==(2 + 3)) then v78[v685]=v78[v685](v13(v78,v685 + 1 + 0 ,v73));v72=v72 + 1 ;v80=v68[v72];v78[v80[855 -(152 + (2782 -2081)) ]]();v72=v72 + 1 ;v80=v68[v72];v680=6;end if (v680==(1313 -(430 + 881))) then v78[v685 + 1 + 0 ]=v684;v78[v685]=v684[v80[(249 + 650) -(557 + 338) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v680=10 -7 ;end end elseif (v78[v80[4 -2 ]]==v80[8 -(93 -(40 + 49)) ]) then v72=v72 + 1 ;else v72=v80[11 -8 ];end v72=v72 + (491 -(99 + 391)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
